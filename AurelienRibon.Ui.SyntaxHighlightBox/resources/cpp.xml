<?xml version="1.0" encoding="utf-8" ?>

<Syntax name="cpp">
 
	<!-- Words rules will only highlight the provided words -->
	<HighlightWordsRule name="Blue words">
		<Words>
			alignas
alignof
and
and_eq
asm
auto
bitand
bitor
bool
break
case
catch
char
char16_t
char32_t
class
compl
const
constexpr
const_cast
continue
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if
inline
int
long
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
register
reinterpret_cast
return
short
signed
sizeof
static
static_assert
static_cast
struct
switch
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq
		</Words>
		<IgnoreCase>false</IgnoreCase>
		<Foreground>#569cd6</Foreground>
		<FontWeight>Bold</FontWeight>
		<FontStyle>Normal</FontStyle>
	</HighlightWordsRule>

	<!-- Line rules will highlight the LineStart token as well as the rest of the line -->
	<HighlightLineRule name="Comments">
		<LineStart>//</LineStart>
		<IgnoreCase>false</IgnoreCase>
		<Foreground>#57a64a</Foreground>
		<FontWeight>Normal</FontWeight>
		<FontStyle>Normal</FontStyle>
	</HighlightLineRule>

	<!-- Advanced rules use a regular expression to find what they must highlight -->
	<!-- Do not overuse them, as they have a great computer time cost --> 
	<AdvancedHighlightRule name="Numbers">
		<Expression>\b([0-9]+)\b</Expression>
		<IgnoreCase>false</IgnoreCase>
		<Foreground>#F68A1B</Foreground>
		<FontWeight>Normal</FontWeight>
		<FontStyle>Normal</FontStyle>
	</AdvancedHighlightRule>
  <AdvancedHighlightRule name="string">
    <Expression>"[^"]*"</Expression>
    <IgnoreCase>false</IgnoreCase>
    <Foreground>#ffb672</Foreground>
    <FontWeight>Normal</FontWeight>
    <FontStyle>Normal</FontStyle>
  </AdvancedHighlightRule>
</Syntax>